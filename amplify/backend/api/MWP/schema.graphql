type WorkoutExercise
  @model
  @auth(rules: [{ allow: private, operations: [read] }, { allow: owner }]) {
  id: ID!
  setsConfig: AWSJSON!
  sortOrder: Int
  workoutID: ID! @index(name: "byWorkout")
  WorkoutRoutineExercise: WorkoutRoutineExercise @hasOne
}

enum WorkoutStatus {
  INPROGRESS
  FINISHED
}

type Workout
  @model
  @auth(rules: [{ allow: private, operations: [read] }, { allow: owner }]) {
  id: ID!
  status: WorkoutStatus! @index(name: "workoutsByDate", queryField: "workoutsByDate", sortKeyFields: ["dateFinished"])
  dateFinished: AWSDateTime
  totalTimeInSeconds: Int
  WorkoutPlanRoutine: WorkoutPlanRoutine @hasOne
  WorkoutExercises: [WorkoutExercise]
    @hasMany(indexName: "byWorkout", fields: ["id"])
}

type Exercise
  @model
  @auth(rules: [{ allow: private, operations: [read] }, { allow: owner }]) {
  id: ID!
  name: String!
  muscleGroup: MuscleGroup
  equipment: ExerciseEquipment
}

enum ExerciseEquipment {
  BARBELL
  BODYWEIGHT
  DUMBBELL
  EZBARBELL
  KETTLEBELL
  LEVERAGEMACHINE
  SLEDMACHINE
  SMITHMACHINE
  WEIGHTED
}

enum MuscleGroup {
  BACK
  BICEPS
  CARDIO
  CHEST
  CORE
  FOREARMS
  FULLBODY
  LEGS
  NECK
  SHOULDERS
  TRICEPS
  WEIGHTLIFTING
}

type WorkoutRoutineExercise
  @model
  @auth(rules: [{ allow: private, operations: [read] }, { allow: owner }]) {
  id: ID!
  name: String!
  muscleGroup: MuscleGroup
  equipment: ExerciseEquipment
  color: String
  description: String
  restTimeInSeconds: Int
  sortOrder: Int
  workoutPlanRoutineID: ID! @index(name: "byWorkoutPlanRoutine")
  setsConfig: AWSJSON!
}

type WorkoutPlanRoutine
  @model
  @auth(rules: [{ allow: private, operations: [read] }, { allow: owner }]) {
  id: ID!
  name: String!
  sortOrder: Int
  workoutPlanID: ID! @index(name: "byWorkoutPlan")
  WorkoutRoutineExercises: [WorkoutRoutineExercise]
    @hasMany(indexName: "byWorkoutPlanRoutine", fields: ["id"])
}

type User
  @model
  @auth(rules: [{ allow: private, operations: [read] }, { allow: owner }]) {
  id: ID!
  name: String!
  email: AWSEmail
  image: String
  username: String
    @index(name: "usersByUsername", queryField: "usersByUsername")
  WorkoutPlans: [WorkoutPlan] @hasMany(indexName: "byUser", fields: ["id"])
}

type WorkoutPlan
  @model
  @auth(rules: [{ allow: private, operations: [read] }, { allow: owner }]) {
  id: ID!
  name: String!
  userID: ID! @index(name: "byUser")
  WorkoutPlanRoutines: [WorkoutPlanRoutine]
    @hasMany(indexName: "byWorkoutPlan", fields: ["id"])
}

type Mutation {
  deletePlanAndRoutines(planId: ID!): DeletePlanAndRoutinesResponse
    @function(name: "editPlanAndRoutines-${env}")
  deleteWorkoutAndExercises(workoutId: ID!): DeleteWorkoutAndExercisesResponse
  @function(name: "deleteWorkoutAndExercises-${env}")
  bulkCreateWorkoutExercises(
    exercises: [CreateWorkoutExerciseInput!]!
  ): BulkCreateWorkoutExercisesResponse
    @function(name: "bulkCreateWorkoutExercises-${env}")
}

type DeletePlanAndRoutinesResponse {
  id: ID!
}

type DeleteWorkoutAndExercisesResponse {
  id: ID!
}

type BulkCreateWorkoutExercisesResponse {
  exercises: [WorkoutExercise!]!
}

input CreateWorkoutExerciseInput {
  id: ID
  setsConfig: AWSJSON!
  sortOrder: Int
  workoutID: ID!
  _version: Int
  workoutExerciseWorkoutRoutineExerciseId: ID
}
